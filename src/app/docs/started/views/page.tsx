import { CodeBlock } from "@/components/CodeBlock";
import Mark from "@/components/Mark";
import Link from "next/link";

export default function ViewsPage() {
    return (
        <main className="flex-1 flex flex-col gap-5 pt-5 pb-10 text-white/80">
            <h1 className="text-2xl font-bold">View</h1>

            <section>
                <Mark>
                    Dans Nexy, une view est un composant essentiel qui se trouve dans le fichier <code className="text-[#A9FFEA]">controller.py</code>. Elle joue un r√¥le crucial en structurant et en pr√©sentant les donn√©es de mani√®re claire et esth√©tique, facilitant ainsi l&apos;interaction utilisateur. Les views permettent de lier la logique m√©tier √† la pr√©sentation, offrant une exp√©rience utilisateur fluide et intuitive.
                </Mark>
            </section>

            <section>
                <h2 className="text-xl font-semibold mt-4">Structure du dossier pour une view</h2><br/>
                <CodeBlock
                    language="shell"
                    code={`üìÅ MonProjet/\n‚îú‚îÄ‚îÄ üìÅ app/\n‚îÇ   ‚îú‚îÄ‚îÄ üìÑ controller.py  # Pour la view\n‚îÇ   |‚îÄ‚îÄ üìÑ service.py    # Services associ√©s\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ components/\n‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üìÑ Profile.py\n‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üìÑ UserStats.py`}
                />
            </section>

            <section>
                <h2 className="text-xl font-semibold mt-4">Comment d√©finir une view</h2>
                <p className="text-base font-light">
                    Une view dans Nexy est une fonction Python enrichie par le d√©corateur <code className="text-[#A9FFEA]">@component</code>. Elle int√®gre la logique m√©tier et la pr√©sentation pour g√©n√©rer des pages web interactives et dynamiques. En utilisant des views, vous pouvez encapsuler des fonctionnalit√©s complexes tout en gardant le code organis√© et maintenable.
                </p><br/>
                <CodeBlock
                    language="python"
                    code={`from nexy import component, Depends\nfrom .service import AppService\nfrom components import Profile, UserStats\n\n@component(\n    imports=[Profile, UserStats]\n)\ndef VIEW(\n    service: Depends(AppService)\n):\n    user_data = service.get_profile_data()\n    return {\n        "user": user_data["user"],\n        "stats": user_data["stats"]\n    }`}
                />
            </section>

            <section>
                <h2 className="text-xl font-semibold mt-6">Exploiter une view</h2>
                <p className="text-base font-light">
                    Une fois cr√©√©e, une view peut √™tre utilis√©e pour afficher des donn√©es de mani√®re structur√©e. Par exemple, une view de profil utilisateur peut int√©grer divers composants pour pr√©senter les d√©tails de l&apos;utilisateur de fa√ßon coh√©rente. Cela permet de cr√©er des interfaces utilisateur qui sont √† la fois esth√©tiques et fonctionnelles, en tirant parti de la puissance des composants r√©utilisables.
                </p><br/>
                <CodeBlock
                    language="html"
                    code={`<div class="profile-container">\n    <Profile \n        user="{{user}}"\n    />\n    <UserStats \n        stats="{{stats}}"\n    />\n</div>`}
                />
            </section>

            <section>
                <h2 className="text-xl font-semibold mt-6">Pourquoi utiliser des views ?</h2>
                <p className="text-base font-light">
                    L&apos;utilisation des views offre de nombreux avantages :
                </p>
                <ul className="list-disc list-inside text-base font-light ml-4 space-y-2">
                    <li>Code bien organis√© et facile √† comprendre, ce qui facilite la collaboration entre les d√©veloppeurs.</li>
                    <li>R√©utilisation efficace des composants, permettant de r√©duire la duplication de code et d&apos;am√©liorer la coh√©rence de l&apos;application.</li>
                    <li>Maintenance simplifi√©e gr√¢ce √† une structure modulaire, rendant les mises √† jour et les modifications plus faciles √† g√©rer.</li>
                    <li>Possibilit√© de cr√©er des pages web dynamiques et interactives, offrant une exp√©rience utilisateur enrichie et engageante.</li>
                </ul>
            </section>

            <div className="flex gap-5 justify-between mt-8">
                <Link href="/docs/started/components" className={`cursor-pointer px-4 py-2 text-sm text-left font-normal rounded-[12px] bg-[#A9FFEA]/2.5 border border-[#A9FFEA]/5 text-[#A9FFEA]`}>
                    ‚Üê Composants
                </Link>
                <Link href="/docs/started/server_actions" className={`cursor-pointer px-4 py-2 text-sm text-left font-normal rounded-[12px] bg-[#A9FFEA]/20 border border-[#A9FFEA]/25 text-[#A9FFEA]`}>
                    Server actions ‚Üí
                </Link>
            </div>
        </main>
    );
}
